<Project Sdk="Microsoft.NET.Sdk">
    <PropertyGroup>
        <BeautySharedRuntimeMode>False</BeautySharedRuntimeMode>
        <!-- beauty into sub-directory, default is libs, quote with "" if contains space  -->
        <BeautyLibsDir Condition="$(BeautySharedRuntimeMode) == 'True'">../libraries</BeautyLibsDir>
        <BeautyLibsDir Condition="$(BeautySharedRuntimeMode) != 'True'">./libraries</BeautyLibsDir>
        <!-- dlls that you don't want to be moved or can not be moved -->
        <!-- <BeautyExcludes>dll1.dll;lib*;...</BeautyExcludes> -->
        <!-- dlls that end users never needed, so hide them -->
        <!-- <BeautyHiddens>hostfxr;hostpolicy;*.deps.json;*.runtimeconfig*.json</BeautyHiddens> -->
        <!-- set to True if you want to disable -->
        <DisableBeauty>False</DisableBeauty>
        <!-- set to False if you want to beauty on build -->
        <BeautyOnPublishOnly>False</BeautyOnPublishOnly>
        <!-- DO NOT TOUCH THIS OPTION -->
        <BeautyNoRuntimeInfo>False</BeautyNoRuntimeInfo>
        <!-- valid values: auto|with|without -->
        <BeautyNBLoaderVerPolicy>auto</BeautyNBLoaderVerPolicy>
        <!-- set to True if you want to allow 3rd debuggers(like dnSpy) debugs the app -->
        <BeautyEnableDebugging>False</BeautyEnableDebugging>
        <!-- the patch can reduce the file count -->
        <!-- set to False if you want to disable -->
        <!-- SCD Mode Feature Only -->
        <BeautyUsePatch>True</BeautyUsePatch>
        <!-- App Entry Dll = BeautyDir + BeautyAppHostDir + BeautyAppHostEntry -->
        <!-- see https://github.com/nulastudio/NetBeauty2#customize-apphost for more details -->
        <!-- relative path based on AppHostDir -->
        <!-- .NET Core Non Single-File Only -->
        <!-- <BeautyAppHostEntry>bin/MyApp.dll</BeautyAppHostEntry> -->
        <!-- relative path based on BeautyDir -->
        <!-- .NET Core Non Single-File Only -->
        <!-- <BeautyAppHostDir>..</BeautyAppHostDir> -->
        <!-- <BeautyAfterTasks></BeautyAfterTasks> -->
        <!-- valid values: Error|Detail|Info -->
        <BeautyLogLevel>Info</BeautyLogLevel>
        <!-- set to a repo mirror if you have troble in connecting github -->
        <!-- <BeautyGitCDN>https://gitee.com/liesauer/HostFXRPatcher</BeautyGitCDN> -->
        <!-- <BeautyGitTree>master</BeautyGitTree> -->
    </PropertyGroup>

    <PropertyGroup>
        <OutputType>WinExe</OutputType>
        <TargetFramework>net8.0</TargetFramework>
        <Nullable>enable</Nullable>
        <BuiltInComInteropSupport>true</BuiltInComInteropSupport>
        <ApplicationManifest>app.manifest</ApplicationManifest>
        <AvaloniaUseCompiledBindingsByDefault>true</AvaloniaUseCompiledBindingsByDefault>
    </PropertyGroup>

    <ItemGroup>
        <AvaloniaResource Include="Assets\**"/>
        <Folder Include="Views\Login\"/>
    </ItemGroup>

    <ItemGroup>
        <PackageReference Include="Avalonia" Version="11.3.2" />
        <PackageReference Include="Avalonia.Desktop" Version="11.3.2" />
        <PackageReference Include="Avalonia.Themes.Fluent" Version="11.3.2" />
        <PackageReference Include="Avalonia.Fonts.Inter" Version="11.3.2" />
        <!--Condition below is needed to remove Avalonia.Diagnostics package from build output in Release configuration.-->
        <PackageReference Condition="'$(Configuration)' == 'Debug'" Include="Avalonia.Diagnostics" Version="11.3.1"/>
        <PackageReference Include="CommunityToolkit.Mvvm" Version="8.4.0"/>
    </ItemGroup>

    <ItemGroup>
        <Compile Update="Views\Login\LoginPageView.axaml.cs">
            <DependentUpon>LoginPageView.axaml</DependentUpon>
        </Compile>
        <Compile Update="Views\Home\HomePageView.axaml.cs">
            <DependentUpon>LoginPageView.axaml</DependentUpon>
            <SubType>Code</SubType>
        </Compile>
        <Compile Update="Views\Issue\AutomaticIssuesPageView.axaml.cs">
            <DependentUpon>AutomaticIssuesPageView.axaml</DependentUpon>
            <SubType>Code</SubType>
        </Compile>
        <Compile Update="Views\User\UsersPageView.axaml.cs">
            <SubType>Code</SubType>
        </Compile>
        <Compile Update="Views\Library\LibrarysPageView.axaml.cs">
            <SubType>Code</SubType>
            <DependentUpon>LibrarysPageView.axaml</DependentUpon>
        </Compile>
        <Compile Update="Views\Library\LibraryPageView.axaml.cs">
            <SubType>Code</SubType>
            <DependentUpon>LibraryPageView.axaml</DependentUpon>
        </Compile>
        <Compile Update="Views\Serie\SeriePageView.axaml.cs">
            <SubType>Code</SubType>
            <DependentUpon>LibraryPageView.axaml</DependentUpon>
        </Compile>
        <Compile Update="Views\Chapter\ChapterPageView.axaml.cs">
            <SubType>Code</SubType>
            <DependentUpon>LibraryPageView.axaml</DependentUpon>
        </Compile>
        <Compile Update="Views\Issue\UserIssuesPageView.axaml.cs">
          <DependentUpon>UserIssuesPageView.axaml</DependentUpon>
          <SubType>Code</SubType>
        </Compile>
    </ItemGroup>

    <ItemGroup>
        <ProjectReference Include="..\ManaxLibrary\ManaxLibrary.csproj"/>
    </ItemGroup>
</Project>
